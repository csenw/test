SVM.cpp

constants:
1. INF: HUGE_VAL (very big number)
2. TAU: 1e-12 (very close to zero)

functions:
1. min
2. max
3. swap: swap values of two variables
4. clone: return a cloned object
5. powi: calculate power
6. print_string_stdout
7. info

classes:
1. Kernel Cache
2. QMatrix
3. Kernel (inherit from QMatrix)
4. Solver (An SMO algorithm in Fan et al. JMLR 6(2005), pp. 1889-1918)
// Solves:
//
//	min 0.5(\alpha^T Q \alpha) + p^T \alpha
//
//		y^T \alpha = \delta
//		y_i = +1 or -1
//		0 <= alpha_i <= Cp for y_i = 1
//		0 <= alpha_i <= Cn for y_i = -1
//
// Given:
//
//	Q, p, y, Cp, Cn, and an initial feasible point \alpha
//	l is the size of vectors and matrices
//	eps is the stopping tolerance
//
// solution will be put in \alpha, objective value will be put in obj
//
5. Solver_NU inherit from Solver
//
// Solver for nu-svm classification and regression
//
// additional constraint: e^T \alpha = constant
//
6. SVC_Q: Q matrices for various formulations
7. ONE_CLASS_Q:
8. SVR_Q:
9. static void solve_c_svc: construct and solve various formulations
10. static void solve_nu_svc:
11. static void solve_one_class:
12. static void solve_epsilon_svr:
13. static void solve_nu_svr:
14. struct decision_function: decision_function (double * alpha, double rho)
15. static decision_function svm_train_one
16. static void sigmoid_train: Platt's binary SVM Probabilistic Output: an improvement from Lin et al.
17. static double sigmoid_predict
18. static void multiclass_probability:
19: static void svm_Binary_svc_probability:
20: static double svm_svr_probability:
21: static void svm_group_classes
22: svm_model *svm_train: interface functions
23: svm_cross_validation:
24: int svm_get_svm_type:
25: int svm_get_nr_class:
26: void svm_get_labels:
27: double svm_get_svr_probability:
28: double svm_predict_values:
29: double svm_predict:
30: double svm_predict_probability:
31: svm_save_model:
32: svm_model* svm_load_model:
33: void svm_free_model_content:
34: void svm_free_and_destroy_model:
35: void svm_destroy_param:
36: int svm_check_probability_model:
37: void svm_get_print_string_function: